[2024-03-26T03:41:00.659+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: upload_historical_congress_data.upload_historical_members scheduled__2024-03-15T00:00:00+00:00 [queued]>
[2024-03-26T03:41:00.666+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: upload_historical_congress_data.upload_historical_members scheduled__2024-03-15T00:00:00+00:00 [queued]>
[2024-03-26T03:41:00.668+0000] {taskinstance.py:2193} INFO - Starting attempt 4 of 6
[2024-03-26T03:41:00.677+0000] {taskinstance.py:2217} INFO - Executing <Task(PythonOperator): upload_historical_members> on 2024-03-15 00:00:00+00:00
[2024-03-26T03:41:00.682+0000] {standard_task_runner.py:60} INFO - Started process 122 to run task
[2024-03-26T03:41:00.685+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'upload_historical_congress_data', 'upload_historical_members', 'scheduled__2024-03-15T00:00:00+00:00', '--job-id', '121', '--raw', '--subdir', 'DAGS_FOLDER/upload_historical_congress_data.py', '--cfg-path', '/tmp/tmp1nwnavhz']
[2024-03-26T03:41:00.689+0000] {standard_task_runner.py:88} INFO - Job 121: Subtask upload_historical_members
[2024-03-26T03:41:00.726+0000] {task_command.py:423} INFO - Running <TaskInstance: upload_historical_congress_data.upload_historical_members scheduled__2024-03-15T00:00:00+00:00 [running]> on host 2d1395ed6407
[2024-03-26T03:41:00.798+0000] {taskinstance.py:2513} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='***@***.com' AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='upload_historical_congress_data' AIRFLOW_CTX_TASK_ID='upload_historical_members' AIRFLOW_CTX_EXECUTION_DATE='2024-03-15T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='4' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2024-03-15T00:00:00+00:00'
[2024-03-26T03:41:00.808+0000] {get_data.py:202} INFO - executing API call for https://api.congress.gov/v3/member?format=json&fromDateTime=2023-01-01T00:00:00Z&toDateTime=2024-03-15T00:00:00Z&offset=0&limit=250&api_key=WNue8kCDCOIlewAsULgnN8j6SqSgAZjE2sYbPsBb
[2024-03-26T03:41:04.945+0000] {get_data.py:202} INFO - executing API call for https://api.congress.gov/v3/member?format=json&fromDateTime=2023-01-01T00:00:00Z&toDateTime=2024-03-15T00:00:00Z&offset=0&limit=250&api_key=WNue8kCDCOIlewAsULgnN8j6SqSgAZjE2sYbPsBb
[2024-03-26T03:41:07.007+0000] {logging_mixin.py:188} INFO - Parquet data uploaded to gs://congress_data/member/1_250_member.parquet
[2024-03-26T03:41:07.009+0000] {logging_mixin.py:188} INFO - 250 of 675 member records uploaded
[2024-03-26T03:41:07.011+0000] {get_data.py:202} INFO - executing API call for https://api.congress.gov/v3/member?format=json&fromDateTime=2023-01-01T00:00:00Z&toDateTime=2024-03-15T00:00:00Z&offset=250&limit=250&api_key=WNue8kCDCOIlewAsULgnN8j6SqSgAZjE2sYbPsBb
[2024-03-26T03:41:12.477+0000] {logging_mixin.py:188} INFO - Parquet data uploaded to gs://congress_data/member/251_500_member.parquet
[2024-03-26T03:41:12.482+0000] {logging_mixin.py:188} INFO - 500 of 675 member records uploaded
[2024-03-26T03:41:12.487+0000] {get_data.py:202} INFO - executing API call for https://api.congress.gov/v3/member?format=json&fromDateTime=2023-01-01T00:00:00Z&toDateTime=2024-03-15T00:00:00Z&offset=500&limit=250&api_key=WNue8kCDCOIlewAsULgnN8j6SqSgAZjE2sYbPsBb
[2024-03-26T03:41:15.868+0000] {local_task_job_runner.py:302} WARNING - State of this instance has been externally set to None. Terminating instance.
[2024-03-26T03:41:15.876+0000] {process_utils.py:131} INFO - Sending 15 to group 122. PIDs of all processes in the group: [122]
[2024-03-26T03:41:15.879+0000] {process_utils.py:86} INFO - Sending the signal 15 to group 122
[2024-03-26T03:41:15.916+0000] {taskinstance.py:2483} ERROR - Received SIGTERM. Terminating subprocesses.
[2024-03-26T03:41:15.925+0000] {taskinstance.py:2731} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 444, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 414, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/operators/python.py", line 200, in execute
    return_value = self.execute_callable()
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/operators/python.py", line 217, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/opt/airflow/dags/scripts/python/get_data.py", line 135, in get_and_upload_data
    upload_to_gcs_as_parquet(obj_list=data,
  File "/opt/airflow/dags/scripts/python/get_data.py", line 228, in upload_to_gcs_as_parquet
    client = storage.Client()
  File "/home/airflow/.local/lib/python3.8/site-packages/google/cloud/storage/client.py", line 226, in __init__
    super(Client, self).__init__(
  File "/home/airflow/.local/lib/python3.8/site-packages/google/cloud/client/__init__.py", line 320, in __init__
    _ClientProjectMixin.__init__(self, project=project, credentials=credentials)
  File "/home/airflow/.local/lib/python3.8/site-packages/google/cloud/client/__init__.py", line 268, in __init__
    project = self._determine_default(project)
  File "/home/airflow/.local/lib/python3.8/site-packages/google/cloud/client/__init__.py", line 287, in _determine_default
    return _determine_default_project(project)
  File "/home/airflow/.local/lib/python3.8/site-packages/google/cloud/_helpers/__init__.py", line 152, in _determine_default_project
    _, project = google.auth.default()
  File "/home/airflow/.local/lib/python3.8/site-packages/google/auth/_default.py", line 657, in default
    credentials, project_id = checker()
  File "/home/airflow/.local/lib/python3.8/site-packages/google/auth/_default.py", line 650, in <lambda>
    lambda: _get_explicit_environ_credentials(quota_project_id=quota_project_id),
  File "/home/airflow/.local/lib/python3.8/site-packages/google/auth/_default.py", line 270, in _get_explicit_environ_credentials
    credentials, project_id = load_credentials_from_file(
  File "/home/airflow/.local/lib/python3.8/site-packages/google/auth/_default.py", line 126, in load_credentials_from_file
    return _load_credentials_from_info(
  File "/home/airflow/.local/lib/python3.8/site-packages/google/auth/_default.py", line 188, in _load_credentials_from_info
    credentials, project_id = _get_service_account_credentials(
  File "/home/airflow/.local/lib/python3.8/site-packages/google/auth/_default.py", line 449, in _get_service_account_credentials
    credentials = service_account.Credentials.from_service_account_info(
  File "/home/airflow/.local/lib/python3.8/site-packages/google/oauth2/service_account.py", line 241, in from_service_account_info
    signer = _service_account_info.from_dict(
  File "/home/airflow/.local/lib/python3.8/site-packages/google/auth/_service_account_info.py", line 57, in from_dict
    signer = crypt.RSASigner.from_service_account_info(data)
  File "/home/airflow/.local/lib/python3.8/site-packages/google/auth/crypt/base.py", line 109, in from_service_account_info
    return cls.from_string(
  File "/home/airflow/.local/lib/python3.8/site-packages/google/auth/crypt/_cryptography_rsa.py", line 133, in from_string
    private_key = serialization.load_pem_private_key(
  File "/home/airflow/.local/lib/python3.8/site-packages/cryptography/hazmat/primitives/serialization/base.py", line 25, in load_pem_private_key
    return ossl.load_pem_private_key(
  File "/home/airflow/.local/lib/python3.8/site-packages/cryptography/hazmat/backends/openssl/backend.py", line 747, in load_pem_private_key
    return self._load_key(
  File "/home/airflow/.local/lib/python3.8/site-packages/cryptography/hazmat/backends/openssl/backend.py", line 942, in _load_key
    return self._evp_pkey_to_private_key(
  File "/home/airflow/.local/lib/python3.8/site-packages/cryptography/hazmat/backends/openssl/backend.py", line 521, in _evp_pkey_to_private_key
    return _RSAPrivateKey(
  File "/home/airflow/.local/lib/python3.8/site-packages/cryptography/hazmat/backends/openssl/rsa.py", line 383, in __init__
    res = backend._lib.RSA_check_key(rsa_cdata)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 2485, in signal_handler
    raise AirflowException("Task received SIGTERM signal")
airflow.exceptions.AirflowException: Task received SIGTERM signal
[2024-03-26T03:41:15.933+0000] {taskinstance.py:1149} INFO - Marking task as UP_FOR_RETRY. dag_id=upload_historical_congress_data, task_id=upload_historical_members, execution_date=20240315T000000, start_date=20240326T034100, end_date=20240326T034115
[2024-03-26T03:41:15.942+0000] {standard_task_runner.py:107} ERROR - Failed to execute job 121 for task upload_historical_members (Task received SIGTERM signal; 122)
[2024-03-26T03:41:15.975+0000] {process_utils.py:79} INFO - Process psutil.Process(pid=122, status='terminated', exitcode=1, started='03:41:00') (122) terminated with exit code 1
